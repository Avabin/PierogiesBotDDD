
name: Review
on:
  push:
  pull_request:
  workflow_dispatch:
  
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Set up dotnet 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Begin scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Avabin_PierogiesBotDDD" /o:"avabin" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      - name: Build
        run: dotnet build
      - name: Set up test dependencies
        shell: bash
        run: |
          docker-compose -f Tests/docker-compose.yml up -d
          echo "Waiting for RabbitMQ to start accepting connections"
          while ! nc -z localhost 5672; do sleep 3; done
          echo "RabbitMQ is up and accepting connections"
          echo "Waiting for MongoDB to start accepting connections"
          while ! nc -z localhost 27017; do sleep 3; done
          echo "MongoDB is up and accepting connections"
          sleep 10
      - name: Run tests
        run: dotnet test --no-build --logger "trx;LogFileName=results.trx"
      - name: End scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
        